/*!
 * -------------------------------------------
 * Copyright (c) 2020, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     215.kth-largest-element-in-an-array.cpp
 * \Author   Yingmin Li
 * \Mail     yingmin.li@horizon.ai
 * \Version  1.0.0.0
 * \Date     2020/1/6
 * \Brief    implement of 215.kth-largest-element-in-an-array.cpp
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */
/*!
 * @brief https://leetcode-cn.com/problems/kth-largest-element-in-an-array/
 * Time: O(nlogk)
 * Space: O(k)
 */
#include <queue>

#include "leetcode/leetcode.h"
namespace horizon {
namespace leetcode {
int findKthLargest(vector<int>& nums, int k) {
  std::priority_queue<int, vector<int>, std::greater<int>> min_heap;
  for (const auto& num : nums) {
    min_heap.push(num);
    if (min_heap.size() > k) {
      min_heap.pop();
    }
  }
  return min_heap.top();
}
}  // namespace leetcode
}  // namespace horizon
