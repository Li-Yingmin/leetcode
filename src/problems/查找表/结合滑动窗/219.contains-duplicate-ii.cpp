/*!
 * -------------------------------------------
 * Copyright (c) 2020, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     219.contains-duplicate-ii.cpp
 * \Author   Yingmin Li
 * \Mail     yingmin.li@horizon.ai
 * \Version  1.0.0.0
 * \Date     2020/1/16
 * \Brief    implement of 219.contains-duplicate-ii.cpp
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */
/*!
 * @brief https://leetcode-cn.com/problems/contains-duplicate-ii
 * Time: O(n)
 * Space: O(n)+
 */
#include "leetcode/leetcode.h"
namespace horizon {
namespace leetcode {
namespace II {
bool containsNearbyDuplicate(vector<int>& nums, int k) {
  std::unordered_map<int, int> counter;
  for (size_t i = 0; i < nums.size(); ++i) {
    if (counter.find(nums[i]) != counter.end()) {
      if (i - counter[nums[i]] <= k) {
        return true;
      }
      counter[nums[i]] = i;
    } else {
      counter[nums[i]] = i;
    }
  }
  return false;
}
}  // namespace II
}  // namespace leetcode
}  // namespace horizon