/*!
 * -------------------------------------------
 * Copyright (c) 2019, Horizon Robotics, Inc.
 * All rights reserved.
 * \File     singleton.h
 * \Author   Yingmin Li
 * \Mail     yingmin.li@horizon.ai
 * \Version  1.0.0.0
 * \Date     2019/11/22
 * \Brief    implement of singleton.h
 * \DO NOT MODIFY THIS COMMENT, \
 * \WHICH IS AUTO GENERATED BY EDITOR
 * -------------------------------------------
 */

#ifndef INCLUDE_LEETCODE_UTILS_SINGLETON_H_
#define INCLUDE_LEETCODE_UTILS_SINGLETON_H_

#include <cassert>

namespace horizon {
namespace leetcode {
template <typename T>
class CSingleton {
  struct object_creator {
   public:
    object_creator() { CSingleton<T>::Instance(); }
    inline void do_nothing() const {}
  };

  static object_creator create_object;

 public:
  typedef T object_type;
  static object_type &Instance() {
    static object_type obj;
    // 据说这个do_nothing是确保create_object构造函数被调用
    // 这跟模板的编译有关
    create_object.do_nothing();
    return obj;
  }
};

template <typename T>
typename CSingleton<T>::object_creator CSingleton<T>::create_object;

}  // namespace leetcode
}  // namespace horizon

#endif  // INCLUDE_LEETCODE_UTILS_SINGLETON_H_
